schema {
    query: Query
    mutation: Mutation
}

type Product {
    sku: ID!
    name: String!
    description: String!
    unitPrice: Float!
    unitCost: Float!
    stock: Int!
    tags: String
    image: String
    warehouse: Warehouse!
}

type Warehouse {
    id: ID!
    products: [Product]
    location: String!
}

type Shipment {
    id: ID!
    date: String!
    product: Product!
    quantity: Int!
    cost: Float!
}

type Collection {
    id: ID!
    name: String!
    products: [Product]
}

type Delete {
    success: Boolean!
    errors: [String]
}

input ProductInput {
    name: String
    description: String
    unitPrice: Float
    unitCost: Float
    stock: Int
    tags: String
    image: String
    warehouseId: ID
}

input WarehouseInput {
    location: String!
}

input ShipmentInput {
    date: String!
    productSku: ID!
    quantity: Int!
}

type ProductResult {
    success: Boolean!
    errors: [String]
    product: Product!
}

type WarehouseResult {
    success: Boolean!
    errors: [String]
    warehouse: Warehouse!
}

type ShipmentResult {
    success: Boolean!
    errors: [String]
    shipment: Shipment!
}

type CollectionResult {
    success: Boolean!
    errors: [String]
    collection: Collection!
}

input ProductFilter {
    minStock: Int
    maxStock: Int
    tags: String
}

type Query {
    products: [Product]
    product(sku: ID!): Product!
    filterProduct(filter: ProductFilter!): [Product]
    warehouses: [Warehouse]
    warehouse(id: ID!): Warehouse!
    shipments: [Shipment]
    shipment(id: ID!): Shipment!
    collections: [Collection]
    collection(id: ID!): Collection!
}

type Mutation {
    createProduct(input: ProductInput!): ProductResult!
    deleteProduct(sku: ID!): Delete!
    updateProduct(sku: ID!, input: ProductInput!): ProductResult!
    createWarehouse(input: WarehouseInput!): WarehouseResult!
    createShipment(input: ShipmentInput!): ShipmentResult!
    addToCollection(collectionId: ID!, sku: ID!): CollectionResult!
    removeFromCollection(collectionId: ID!, sku: ID!): CollectionResult!
}

